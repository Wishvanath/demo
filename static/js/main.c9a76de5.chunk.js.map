{"version":3,"sources":["component/home.jsx","component/about.jsx","component/contact-us.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","Component","About","className","id","src","alt","to","ContactUs","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAEqBA,E,iLAEb,OACI,6BACI,mD,GAJkBC,a,QCCbC,G,uLAEb,OACI,kBAAC,WAAD,KACA,yBAAKC,UAAU,mBAAmBC,GAAG,iBACjC,yBAAKD,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,qBACX,yBAAKE,IAAI,+BAA+BC,IAAI,aAEhD,yBAAKH,UAAU,OACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,gCACb,uBAAGA,UAAU,YAAb,mBAEJ,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,uBACb,uBAAGA,UAAU,YAAb,kBAEJ,yBAAKA,UAAU,aACX,uBAAGA,UAAU,wBACb,uBAAGA,UAAU,YAAb,kBAKhB,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,kBAAf,YAAyC,0BAAMA,UAAU,gBACzD,iDACA,2CACA,uLAGA,0BAAMA,UAAU,iBACZ,sCACA,sCACA,sCACA,oCACA,yCACA,mCACA,kCACA,yCACA,qCACA,wCAEJ,kBAAC,IAAD,CAAMI,GAAI,eACN,4BAAQJ,UAAU,yBAAlB,cAEJ,4BAAQA,UAAU,mBAAmBC,GAAG,gBAAxC,0B,GAnDGH,cCDdO,E,iLAEb,OACI,6BACI,+C,GAJuBP,aCIlBQ,E,iLAEjB,OACC,kBAAC,WAAD,KACE,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAIC,UAAaZ,IACpC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAO,SAASC,UAAYV,IACzC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAO,cAAcC,UAAYJ,U,GAPrBP,aCMbY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAET,kBAAC,IAAD,KACI,kBAAC,EAAD,OAIEC,SAASC,eAAe,SDqHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c9a76de5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home component</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport  './common.style.scss'\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <div className=\"about_me_wrapper\" id=\"about_section\">\r\n                <div className=\"section\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-6 about_me_img_inner\">\r\n                                <div className=\"about_me_bg_layer\">\r\n                                    <img src=\"images/bg_layer_about_me.png\" alt=\"Profile\" />\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"pf_descp_wrapper\">\r\n                                        <div className=\"problem_solver\">\r\n                                            <i className=\"fas fa-exclamation-triangle\"></i>\r\n                                            <p className=\"pf_title\">Problem Solver</p>\r\n                                        </div>\r\n                                        <div className=\"design_skill\">\r\n                                            <i className=\"fas fa-laptop-code\"></i>\r\n                                            <p className=\"pf_title\"> Design skill</p>\r\n                                        </div>\r\n                                        <div className=\"team_work\">\r\n                                            <i className=\"fas fa-user-friends\"></i>\r\n                                            <p className=\"pf_title\"> Team work</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-sm-6 about_me_inner\">\r\n                                <div className=\"app_title mb-3\">About Me <span className=\"title_line\"></span></div>\r\n                                <h3>Web Developer and</h3>\r\n                                <h3>UI Designer</h3>\r\n                                <p>\r\n                                   Hello, I am Wishvanath, Web-developer based in India. I am rich experience in Application Development, Website Designing & Building. Also I am good at..\r\n                                </p>\r\n                                <span className=\"d-flex skills\">\r\n                                    <p>Reac.js</p>\r\n                                    <p>Node.js</p>\r\n                                    <p>MongoDB</p>\r\n                                    <p>MySQL</p>\r\n                                    <p>PostgreSQL</p>\r\n                                    <p>Html</p>\r\n                                    <p>CSS</p>\r\n                                    <p>JavaScript</p>\r\n                                    <p>JQuery</p>\r\n                                    <p>Rest Api</p>\r\n                                </span>\r\n                                <Link to =\"/contact-us\">\r\n                                    <button className=\"btn btn_download mr-3\">View More</button>\r\n                                </Link>\r\n                                <button className=\"btn btn_download\" id=\"send_message\">Send Message</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ContactUs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contact Us</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Home from './component/home'\nimport About from './component/about'\nimport ContactUs from './component/contact-us'\n\nexport default class App extends Component {\n  render() {\n    return (\n     <Fragment>\n       <Switch>\n        <Route exact path =\"/\" component = {Home} />\n        <Route exact path = \"/about\" component ={About} />\n        <Route exact path = \"/contact-us\" component ={ContactUs} />\n       </Switch>\n     </Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n\n<Router>\n    <App />\n\n</Router>\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}